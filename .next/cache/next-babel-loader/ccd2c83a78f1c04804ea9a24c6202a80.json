{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport fetch from 'isomorphic-unfetch';\nimport { get } from 'lodash/fp';\nexport var searchMovies = function searchMovies(query) {\n  var res, data;\n  return _regeneratorRuntime.async(function searchMovies$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/search/shows?q=\".concat(query)));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data.map(function (entry) {\n            return get('show', entry);\n          }));\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/thangluong/Desktop/mypc/Projects/Personal/next-typescript/common/http/movies.ts"],"names":["searchMovies","res","fetch","data","get"],"mappings":";AAAA,OAAA,KAAA,MAAA,oBAAA;AACA,SAAA,GAAA,QAAA,WAAA;AAEA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,KAAA,EAAA;AAAA,MAAA,GAAA,EAAA,IAAA;AAAA,SAAA,mBAAA,CAAA,KAAA,CAAA,SAAA,aAAA,CAAA,QAAA,EAAA;AAAA,WAAA,CAAA,EAAA;AAAA,cAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AAAA,UAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,iBAAA,mBAAA,CAAA,KAAA,CACRE,KAAK,CAAA,yCAAA,MAAA,CADG,KACH,CAAA,CADG,CAAA;;AAAA,aAAA,CAAA;AACpBD,UAAAA,GADoB,GAAA,QAAA,CAAA,IACpBA;AADoB,UAAA,QAAA,CAAA,IAAA,GAAA,CAAA;AAAA,iBAAA,mBAAA,CAAA,KAAA,CAEPA,GAAG,CAFI,IAEPA,EAFO,CAAA;;AAAA,aAAA,CAAA;AAEpBE,UAAAA,IAFoB,GAAA,QAAA,CAAA,IAEpBA;AAFoB,iBAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAInB,IAAI,CAAJ,GAAA,CAAS,UAAA,KAAA,EAAK;AAAA,mBAAIC,GAAG,CAAA,MAAA,EAAP,KAAO,CAAP;AAJK,WAInB,CAJmB,CAAA;;AAAA,aAAA,CAAA;AAAA,aAAA,KAAA;AAAA,iBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,GAAA,CAAA;AAArB,CAAA","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport { get } from 'lodash/fp';\r\n\r\nexport const searchMovies = async (query: string) => {\r\n  const res = await fetch(`https://api.tvmaze.com/search/shows?q=${query}`);\r\n  const data = await res.json();\r\n\r\n  return data.map(entry => get('show', entry));\r\n}"]},"metadata":{},"sourceType":"module"}