{"ast":null,"code":"import \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nvar _jsxFileName = \"C:\\\\Users\\\\thangluong\\\\Desktop\\\\mypc\\\\Projects\\\\Personal\\\\next-typescript\\\\pages\\\\movies\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useRef } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { get } from 'lodash/fp';\nimport LandingLayout from '../../containers/LandingLayout';\nconst {\n  Meta\n} = _Card;\n\nconst MoviesPage = ({\n  movies\n}) => {\n  const searchInput = useRef(null);\n  useEffect(() => {\n    console.log(movies);\n  }, [movies]);\n\n  const renderMovies = () => {\n    return movies.map(movie => {\n      const MovieSummary = movie.summary;\n      return __jsx(_Card, {\n        key: movie.id,\n        hoverable: true,\n        style: {\n          width: 240\n        },\n        cover: __jsx(\"img\", {\n          alt: \"example\",\n          src: movie.image.medium,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, __jsx(Meta, {\n        title: movie.name,\n        description: MovieSummary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    });\n  };\n\n  return __jsx(LandingLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Movies page\"), __jsx(_Input, {\n    value: \"sherlock\",\n    ref: searchInput,\n    placeholder: \"Title movie name to search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"movies-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, renderMovies()));\n};\n\nMoviesPage.getInitialProps = async () => {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=sherlock');\n  const data = await res.json();\n  return {\n    movies: data.map(entry => get('show', entry))\n  };\n};\n\nexport default MoviesPage;","map":{"version":3,"sources":["C:/Users/thangluong/Desktop/mypc/Projects/Personal/next-typescript/pages/movies/index.tsx"],"names":["useEffect","useRef","fetch","get","LandingLayout","Meta","MoviesPage","movies","searchInput","console","log","renderMovies","map","movie","MovieSummary","summary","id","width","image","medium","name","getInitialProps","res","data","json","entry"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAGA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,MAAM;AAAEC,EAAAA;AAAF,SAAN;;AAaA,MAAMC,UAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAClD,QAAMC,WAAW,GAAGP,MAAM,CAAC,IAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;;AAIA,QAAMI,YAAY,GAAG,MAA0B;AAC7C,WAAOJ,MAAM,CAACK,GAAP,CAAWC,KAAK,IAAI;AACzB,YAAMC,YAAY,GAAGD,KAAK,CAACE,OAA3B;AACA,aACE;AACE,QAAA,GAAG,EAAEF,KAAK,CAACG,EADb;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAHT;AAIE,QAAA,KAAK,EAAE;AAAK,UAAA,GAAG,EAAC,SAAT;AAAmB,UAAA,GAAG,EAAEJ,KAAK,CAACK,KAAN,CAAYC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,KAAK,CAACO,IAAnB;AAAyB,QAAA,WAAW,EAAEN,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD,KAZM,CAAP;AAaD,GAdD;;AAgBA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAO,IAAA,KAAK,EAAC,UAAb;AAAwB,IAAA,GAAG,EAAEN,WAA7B;AAA0C,IAAA,WAAW,EAAC,4BAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,YAAY,EADf,CAHF,CADF;AASD,CAhCD;;AAkCAL,UAAU,CAACe,eAAX,GAA6B,YAAY;AACvC,QAAMC,GAAG,GAAG,MAAMpB,KAAK,CAAC,gDAAD,CAAvB;AACA,QAAMqB,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEA,SAAO;AACLjB,IAAAA,MAAM,EAAEgB,IAAI,CAACX,GAAL,CAASa,KAAK,IAAItB,GAAG,CAAC,MAAD,EAASsB,KAAT,CAArB;AADH,GAAP;AAGD,CAPD;;AASA,eAAenB,UAAf","sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport { NextPage } from 'next';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { get } from 'lodash/fp';\r\n\r\nimport { Card, Input } from 'antd';\r\nimport LandingLayout from '../../containers/LandingLayout';\r\n\r\nconst { Meta } = Card;\r\n\r\ninterface MovieItem {\r\n  id: string;\r\n  name: string;\r\n  summary: string;\r\n  image: any;\r\n}\r\n\r\ninterface Props {\r\n  movies: Array<MovieItem>;\r\n}\r\n\r\nconst MoviesPage: NextPage<Props> = ({ movies }) => {\r\n  const searchInput = useRef(null);\r\n\r\n  useEffect(() => {\r\n    console.log(movies);\r\n  }, [movies]);\r\n\r\n  const renderMovies = (): Array<JSX.Element> => {\r\n    return movies.map(movie => {\r\n      const MovieSummary = movie.summary;\r\n      return (\r\n        <Card\r\n          key={movie.id}\r\n          hoverable\r\n          style={{ width: 240 }}\r\n          cover={<img alt=\"example\" src={movie.image.medium} />}\r\n        >\r\n          <Meta title={movie.name} description={MovieSummary} />\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <LandingLayout>\r\n      <p>Movies page</p>\r\n      <Input value=\"sherlock\" ref={searchInput} placeholder=\"Title movie name to search\" />\r\n      <div className=\"movies-list\">\r\n        {renderMovies()}\r\n      </div>\r\n    </LandingLayout>\r\n  )\r\n}\r\n\r\nMoviesPage.getInitialProps = async () => {\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=sherlock');\r\n  const data = await res.json();\r\n\r\n  return {\r\n    movies: data.map(entry => get('show', entry)),\r\n  }\r\n}\r\n\r\nexport default MoviesPage;"]},"metadata":{},"sourceType":"module"}