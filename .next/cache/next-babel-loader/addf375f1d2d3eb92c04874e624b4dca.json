{"ast":null,"code":"var _class, _descriptor, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { observable, action, reaction, computed } from 'mobx';\nexport let MoviesStore = (_class = (_temp = class MoviesStore {\n  constructor() {\n    _initializerDefineProperty(this, \"moviesList\", _descriptor, this);\n\n    reaction(() => this.moviesList, list => {\n      alert(`There are ${list.length} movies in list ...`);\n    });\n  }\n\n  get numberOfMovies() {\n    return this.moviesList.length;\n  }\n\n  get moviesData() {\n    return this.moviesList.map(item => item.name);\n  }\n\n  addMovies(movie) {\n    this.moviesList.push(movie);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"moviesList\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"numberOfMovies\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"numberOfMovies\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addMovies\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"addMovies\"), _class.prototype)), _class);\nexport const moviesStore = new MoviesStore();","map":{"version":3,"sources":["C:/Users/thangluong/Desktop/mypc/Projects/Personal/next-typescript-mobx-boiletplate/store/movies/index.ts"],"names":["observable","action","reaction","computed","MoviesStore","constructor","moviesList","list","alert","length","numberOfMovies","moviesData","map","item","name","addMovies","movie","push","moviesStore"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,QAAvC,QAAuD,MAAvD;AAGA,WAAaC,WAAb,sBAAO,MAAMA,WAAN,CAAkB;AAGvBC,EAAAA,WAAW,GAAG;AAAA;;AACZH,IAAAA,QAAQ,CACN,MAAM,KAAKI,UADL,EAENC,IAAI,IAAI;AACNC,MAAAA,KAAK,CAAE,aAAYD,IAAI,CAACE,MAAO,qBAA1B,CAAL;AACD,KAJK,CAAR;AAMD;;AAED,MACIC,cADJ,GAC6B;AAC3B,WAAO,KAAKJ,UAAL,CAAgBG,MAAvB;AACD;;AACD,MAAIE,UAAJ,GAAgC;AAC9B,WAAO,KAAKL,UAAL,CAAgBM,GAAhB,CAAoBC,IAAI,IAAIA,IAAI,CAACC,IAAjC,CAAP;AACD;;AAGDC,EAAAA,SADA,CACUC,KADV,EAC4B;AAC1B,SAAKV,UAAL,CAAgBW,IAAhB,CAAqBD,KAArB;AACD;;AAvBsB,CAAzB,oFACGhB,UADH;AAAA;AAAA;AAAA;AAAA;AAAA,WAC6C,EAD7C;AAAA;AAAA,mEAYGG,QAZH,qJAoBGF,MApBH;AA0BA,OAAO,MAAMiB,WAAW,GAAG,IAAId,WAAJ,EAApB","sourcesContent":["import { observable, action, reaction, computed } from 'mobx';\r\nimport { MovieItem } from '../../pages/movies/types';\r\n\r\nexport class MoviesStore {\r\n  @observable moviesList: Array<MovieItem> = [];\r\n\r\n  constructor() {\r\n    reaction(\r\n      () => this.moviesList,\r\n      list => {\r\n        alert(`There are ${list.length} movies in list ...`);\r\n      }\r\n    )\r\n  }\r\n\r\n  @computed\r\n  get numberOfMovies(): number {\r\n    return this.moviesList.length;\r\n  }\r\n  get moviesData(): Array<string> {\r\n    return this.moviesList.map(item => item.name);\r\n  }\r\n\r\n  @action\r\n  addMovies(movie: MovieItem) {\r\n    this.moviesList.push(movie);\r\n  }\r\n}\r\n\r\nexport const moviesStore = new MoviesStore();\r\n"]},"metadata":{},"sourceType":"module"}