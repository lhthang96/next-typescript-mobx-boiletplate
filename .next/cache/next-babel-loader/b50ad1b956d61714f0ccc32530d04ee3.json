{"ast":null,"code":"import \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nvar _jsxFileName = \"C:\\\\Users\\\\thangluong\\\\Desktop\\\\mypc\\\\Projects\\\\Personal\\\\next-typescript\\\\pages\\\\movies\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport _ from 'lodash';\nimport { get } from 'lodash/fp';\nimport LandingLayout from '../../containers/LandingLayout';\nconst {\n  Meta\n} = _Card;\n\nconst MoviesPage = ({\n  movies\n}) => {\n  const searchInput = useRef(null);\n  const {\n    0: moviesList,\n    1: setMoviesList\n  } = useState(movies);\n\n  const onSearchMovies = async () => {\n    console.log(searchInput.current);\n    const res = await fetch(`https://api.tvmaze.com/search/shows?q=${searchInput.current.input.value}`);\n    const data = await res.json();\n    setMoviesList(data.map(entry => get('show', entry)));\n  };\n\n  const renderMovies = () => {\n    return moviesList.map(movie => {\n      const movieSummary = _.replace(movie.summary, /<[/]?[pb]>/g, '');\n\n      return __jsx(_Card, {\n        key: movie.id,\n        hoverable: true,\n        style: {\n          width: 240\n        },\n        cover: __jsx(\"img\", {\n          alt: \"example\",\n          src: movie.image.medium,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(Meta, {\n        title: movie.name,\n        description: movieSummary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    });\n  };\n\n  return __jsx(LandingLayout, {\n    path: \"home/movies\",\n    title: \"Movies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Movies page\"), __jsx(_Input, {\n    ref: searchInput,\n    placeholder: \"Title movie name to search\",\n    onPressEnter: onSearchMovies,\n    style: {\n      marginBottom: '24px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"movies-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, renderMovies()));\n};\n\nMoviesPage.getInitialProps = async () => {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=sherlock');\n  const data = await res.json();\n  return {\n    movies: data.map(entry => get('show', entry))\n  };\n};\n\nexport default MoviesPage;","map":{"version":3,"sources":["C:/Users/thangluong/Desktop/mypc/Projects/Personal/next-typescript/pages/movies/index.tsx"],"names":["useState","useRef","fetch","_","get","LandingLayout","Meta","MoviesPage","movies","searchInput","moviesList","setMoviesList","onSearchMovies","console","log","current","res","input","value","data","json","map","entry","renderMovies","movie","movieSummary","replace","summary","id","width","image","medium","name","marginBottom","getInitialProps"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,GAAT,QAAoB,WAApB;AAGA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,MAAM;AAAEC,EAAAA;AAAF,SAAN;;AAaA,MAAMC,UAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAClD,QAAMC,WAAW,GAAGR,MAAM,CAAC,IAAD,CAA1B;AACA,QAAM;AAAA,OAAES,UAAF;AAAA,OAAcC;AAAd,MAAgCX,QAAQ,CAACQ,MAAD,CAA9C;;AAEA,QAAMI,cAAc,GAAG,YAAY;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYL,WAAW,CAACM,OAAxB;AACA,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAAE,yCAAwCO,WAAW,CAACM,OAAZ,CAAoBE,KAApB,CAA0BC,KAAM,EAA1E,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AACAT,IAAAA,aAAa,CAACQ,IAAI,CAACE,GAAL,CAASC,KAAK,IAAIlB,GAAG,CAAC,MAAD,EAASkB,KAAT,CAArB,CAAD,CAAb;AACD,GALD;;AAOA,QAAMC,YAAY,GAAG,MAA0B;AAC7C,WAAOb,UAAU,CAACW,GAAX,CAAeG,KAAK,IAAI;AAC7B,YAAMC,YAAY,GAAGtB,CAAC,CAACuB,OAAF,CAAUF,KAAK,CAACG,OAAhB,EAAyB,aAAzB,EAAwC,EAAxC,CAArB;;AACA,aACE;AACE,QAAA,GAAG,EAAEH,KAAK,CAACI,EADb;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAHT;AAIE,QAAA,KAAK,EAAE;AAAK,UAAA,GAAG,EAAC,SAAT;AAAmB,UAAA,GAAG,EAAEL,KAAK,CAACM,KAAN,CAAYC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,KAAK,CAACQ,IAAnB;AAAyB,QAAA,WAAW,EAAEP,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD,KAZM,CAAP;AAaD,GAdD;;AAgBA,SACE,MAAC,aAAD;AAAe,IAAA,IAAI,EAAC,aAApB;AAAkC,IAAA,KAAK,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACE,IAAA,GAAG,EAAEhB,WADP;AAEE,IAAA,WAAW,EAAC,4BAFd;AAGE,IAAA,YAAY,EAAEG,cAHhB;AAIE,IAAA,KAAK,EAAE;AAACqB,MAAAA,YAAY,EAAE;AAAf,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,YAAY,EADf,CAPF,CADF;AAaD,CAxCD;;AA0CAhB,UAAU,CAAC2B,eAAX,GAA6B,YAAY;AACvC,QAAMlB,GAAG,GAAG,MAAMd,KAAK,CAAC,gDAAD,CAAvB;AACA,QAAMiB,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAnB;AAEA,SAAO;AACLZ,IAAAA,MAAM,EAAEW,IAAI,CAACE,GAAL,CAASC,KAAK,IAAIlB,GAAG,CAAC,MAAD,EAASkB,KAAT,CAArB;AADH,GAAP;AAGD,CAPD;;AASA,eAAef,UAAf","sourcesContent":["import { useState, useRef } from 'react';\r\nimport { NextPage } from 'next';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport _ from 'lodash';\r\nimport { get } from 'lodash/fp';\r\n\r\nimport { Card, Input } from 'antd';\r\nimport LandingLayout from '../../containers/LandingLayout';\r\n\r\nconst { Meta } = Card;\r\n\r\ninterface MovieItem {\r\n  id: string;\r\n  name: string;\r\n  summary: string;\r\n  image: any;\r\n}\r\n\r\ninterface Props {\r\n  movies: Array<MovieItem>;\r\n}\r\n\r\nconst MoviesPage: NextPage<Props> = ({ movies }) => {\r\n  const searchInput = useRef(null);\r\n  const [ moviesList, setMoviesList ] = useState(movies);\r\n\r\n  const onSearchMovies = async () => {\r\n    console.log(searchInput.current);\r\n    const res = await fetch(`https://api.tvmaze.com/search/shows?q=${searchInput.current.input.value}`);\r\n    const data = await res.json();\r\n    setMoviesList(data.map(entry => get('show', entry)));\r\n  }\r\n\r\n  const renderMovies = (): Array<JSX.Element> => {\r\n    return moviesList.map(movie => {\r\n      const movieSummary = _.replace(movie.summary, /<[/]?[pb]>/g, '');\r\n      return (\r\n        <Card\r\n          key={movie.id}\r\n          hoverable\r\n          style={{ width: 240 }}\r\n          cover={<img alt=\"example\" src={movie.image.medium} />}\r\n        >\r\n          <Meta title={movie.name} description={movieSummary} />\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <LandingLayout path=\"home/movies\" title=\"Movies\" >\r\n      <p>Movies page</p>\r\n      <Input\r\n        ref={searchInput}\r\n        placeholder=\"Title movie name to search\"\r\n        onPressEnter={onSearchMovies}\r\n        style={{marginBottom: '24px'}} />\r\n      <div className=\"movies-list\">\r\n        {renderMovies()}\r\n      </div>\r\n    </LandingLayout>\r\n  )\r\n}\r\n\r\nMoviesPage.getInitialProps = async () => {\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=sherlock');\r\n  const data = await res.json();\r\n\r\n  return {\r\n    movies: data.map(entry => get('show', entry)),\r\n  }\r\n}\r\n\r\nexport default MoviesPage;"]},"metadata":{},"sourceType":"module"}