{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nvar _jsxFileName = \"C:\\\\Users\\\\thangluong\\\\Desktop\\\\mypc\\\\Projects\\\\Personal\\\\next-typescript\\\\pages\\\\movies\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport _ from 'lodash';\nimport { get } from 'lodash/fp';\nimport LandingLayout from '../../containers/LandingLayout';\nvar Meta = _Card.Meta;\n\nvar MoviesPage = function MoviesPage(_ref) {\n  var movies = _ref.movies;\n  var searchInput = useRef(null);\n\n  var _useState = useState(movies),\n      moviesList = _useState[0],\n      setMoviesList = _useState[1];\n\n  var renderMovies = function renderMovies() {\n    return moviesList.map(function (movie) {\n      var movieSummary = _.replace(movie.summary, /<[/]?[pb]>/g, '');\n\n      return __jsx(_Card, {\n        key: movie.id,\n        hoverable: true,\n        style: {\n          width: 240\n        },\n        cover: __jsx(\"img\", {\n          alt: \"example\",\n          src: movie.image.medium,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(Meta, {\n        title: movie.name,\n        description: movieSummary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    });\n  };\n\n  return __jsx(LandingLayout, {\n    path: \"home/movies\",\n    title: \"Movies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Movies page\"), __jsx(_Input, {\n    value: \"sherlock\",\n    ref: searchInput,\n    placeholder: \"Title movie name to search\",\n    style: {\n      marginBottom: '24px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"movies-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, renderMovies()));\n};\n\nMoviesPage.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=sherlock'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            movies: data.map(function (entry) {\n              return get('show', entry);\n            })\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default MoviesPage;","map":{"version":3,"sources":["C:/Users/thangluong/Desktop/mypc/Projects/Personal/next-typescript/pages/movies/index.tsx"],"names":["useState","useRef","fetch","_","get","LandingLayout","Meta","MoviesPage","movies","searchInput","moviesList","setMoviesList","renderMovies","map","movie","movieSummary","replace","summary","id","width","image","medium","name","marginBottom","getInitialProps","res","json","data","entry"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,GAAT,QAAoB,WAApB;AAGA,OAAOC,aAAP,MAA0B,gCAA1B;IAEQC,I,SAAAA,I;;AAaR,IAAMC,UAA2B,GAAG,SAA9BA,UAA8B,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAClD,MAAMC,WAAW,GAAGR,MAAM,CAAC,IAAD,CAA1B;;AADkD,kBAEZD,QAAQ,CAACQ,MAAD,CAFI;AAAA,MAE1CE,UAF0C;AAAA,MAE9BC,aAF8B;;AAIlD,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAA0B;AAC7C,WAAOF,UAAU,CAACG,GAAX,CAAe,UAAAC,KAAK,EAAI;AAC7B,UAAMC,YAAY,GAAGZ,CAAC,CAACa,OAAF,CAAUF,KAAK,CAACG,OAAhB,EAAyB,aAAzB,EAAwC,EAAxC,CAArB;;AACA,aACE;AACE,QAAA,GAAG,EAAEH,KAAK,CAACI,EADb;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAHT;AAIE,QAAA,KAAK,EAAE;AAAK,UAAA,GAAG,EAAC,SAAT;AAAmB,UAAA,GAAG,EAAEL,KAAK,CAACM,KAAN,CAAYC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,KAAK,CAACQ,IAAnB;AAAyB,QAAA,WAAW,EAAEP,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD,KAZM,CAAP;AAaD,GAdD;;AAgBA,SACE,MAAC,aAAD;AAAe,IAAA,IAAI,EAAC,aAApB;AAAkC,IAAA,KAAK,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAO,IAAA,KAAK,EAAC,UAAb;AAAwB,IAAA,GAAG,EAAEN,WAA7B;AAA0C,IAAA,WAAW,EAAC,4BAAtD;AAAmF,IAAA,KAAK,EAAE;AAACc,MAAAA,YAAY,EAAE;AAAf,KAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,YAAY,EADf,CAHF,CADF;AASD,CA7BD;;AA+BAL,UAAU,CAACiB,eAAX,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACTtB,KAAK,CAAC,gDAAD,CADI;;AAAA;AACrBuB,UAAAA,GADqB;AAAA;AAAA,2CAERA,GAAG,CAACC,IAAJ,EAFQ;;AAAA;AAErBC,UAAAA,IAFqB;AAAA,2CAIpB;AACLnB,YAAAA,MAAM,EAAEmB,IAAI,CAACd,GAAL,CAAS,UAAAe,KAAK;AAAA,qBAAIxB,GAAG,CAAC,MAAD,EAASwB,KAAT,CAAP;AAAA,aAAd;AADH,WAJoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AASA,eAAerB,UAAf","sourcesContent":["import { useState, useRef } from 'react';\r\nimport { NextPage } from 'next';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport _ from 'lodash';\r\nimport { get } from 'lodash/fp';\r\n\r\nimport { Card, Input } from 'antd';\r\nimport LandingLayout from '../../containers/LandingLayout';\r\n\r\nconst { Meta } = Card;\r\n\r\ninterface MovieItem {\r\n  id: string;\r\n  name: string;\r\n  summary: string;\r\n  image: any;\r\n}\r\n\r\ninterface Props {\r\n  movies: Array<MovieItem>;\r\n}\r\n\r\nconst MoviesPage: NextPage<Props> = ({ movies }) => {\r\n  const searchInput = useRef(null);\r\n  const [ moviesList, setMoviesList ] = useState(movies);\r\n\r\n  const renderMovies = (): Array<JSX.Element> => {\r\n    return moviesList.map(movie => {\r\n      const movieSummary = _.replace(movie.summary, /<[/]?[pb]>/g, '');\r\n      return (\r\n        <Card\r\n          key={movie.id}\r\n          hoverable\r\n          style={{ width: 240 }}\r\n          cover={<img alt=\"example\" src={movie.image.medium} />}\r\n        >\r\n          <Meta title={movie.name} description={movieSummary} />\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <LandingLayout path=\"home/movies\" title=\"Movies\" >\r\n      <p>Movies page</p>\r\n      <Input value=\"sherlock\" ref={searchInput} placeholder=\"Title movie name to search\" style={{marginBottom: '24px'}} />\r\n      <div className=\"movies-list\">\r\n        {renderMovies()}\r\n      </div>\r\n    </LandingLayout>\r\n  )\r\n}\r\n\r\nMoviesPage.getInitialProps = async () => {\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=sherlock');\r\n  const data = await res.json();\r\n\r\n  return {\r\n    movies: data.map(entry => get('show', entry)),\r\n  }\r\n}\r\n\r\nexport default MoviesPage;"]},"metadata":{},"sourceType":"module"}