{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.d698abf7ba19edf954d3.hot-update.js","sources":["webpack:///./pages/_app.tsx","webpack:///./store/movies/index.ts"],"sourcesContent":["import { FC } from 'react';\r\nimport { AppProps } from 'next/app';\r\nimport { Provider } from 'mobx-react';\r\nimport { MoviesStore } from '../store/movies';\r\n\r\nconst moviesStore = new MoviesStore();\r\n\r\nconst App: FC<AppProps> = ({ Component, pageProps }) => {\r\n  return (\r\n    <Provider moviesStore={moviesStore} >\r\n      <Component {...pageProps} />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;","import { observable, action, reaction, computed } from 'mobx';\r\nimport { MovieItem } from '../pages/movies/types';\r\n\r\nexport class MoviesStore {\r\n  @observable moviesList: Array<MovieItem> = [];\r\n\r\n  constructor() {\r\n    reaction(\r\n      () => this.moviesList,\r\n      list => {\r\n        alert(`There are ${list.length} movies in list ...`);\r\n      }\r\n    )\r\n  }\r\n\r\n  @computed\r\n  get numberOfMovies(): number {\r\n    return this.moviesList.length;\r\n  }\r\n  get moviesData(): Array<string> {\r\n    return this.moviesList.map(item => item.name);\r\n  }\r\n\r\n  @action\r\n  addMovies(movie: MovieItem) {\r\n    this.moviesList.push(movie);\r\n  }\r\n}\r\n\r\nexport const moviesStore = new MoviesStore();\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AAGA;AAAA;AAAA;AAGA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAXA;AAAA;AAAA;AAsBA;AACA;AAvBA;AAAA;AAAA;AAcA;AACA;AAfA;AAAA;AAAA;AAiBA;AAAA;AAAA;AACA;AAlBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;;;;A","sourceRoot":""}